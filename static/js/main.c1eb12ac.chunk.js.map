{"version":3,"sources":["components/Header.js","components/TextForm.js","App.js","index.js"],"names":["Header","props","react_default","a","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","onClick","togglePink","toggleGreen","toggleYellow","toggleWhite","aria-checked","role","toggleMode","htmlFor","defaultProps","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","theme","formTitle","info","value","onChange","event","target","name","cols","rows","newText","toUpperCase","toLowerCase","split","sort","toString","invert","i","length","console","log","App","setMode","_useState3","_useState4","setTheme","src_components_Header","about","search","document","body","style","backgroundColor","color","TextForm_TextForm","ReactDOM","createRoot","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.c1eb12ac.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\nimport './Header.css'\r\n// import { Link } from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode}  bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"\">\r\n                        {props.title}\r\n                    </a>\r\n                    <button\r\n                        className=\"navbar-toggler\"\r\n                        type=\"button\"\r\n                        data-bs-toggle=\"collapse\"\r\n                        data-bs-target=\"#navbarSupportedContent\"\r\n                        aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\"\r\n                        aria-label=\"Toggle navigation\"\r\n                    >\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link active\"  href=\"\">\r\n                                    Home\r\n                                </a>\r\n                            </li>\r\n                            {/* <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"about\">\r\n                                    {props.about}\r\n                                </a>\r\n                            </li> */}\r\n                        </ul>\r\n                        \r\n                        </div>\r\n                        <div className=\"pink_pallet\" onClick={props.togglePink}>\r\n                        </div>\r\n                        <div className=\"green_pallet\" onClick={props.toggleGreen}>\r\n                        </div>\r\n                        <div className=\"yellow_pallet\" onClick={props.toggleYellow}>\r\n                        </div>\r\n                        <div className=\"white_pallet\" onClick={props.toggleWhite}>\r\n                        </div>\r\n                        <div className={ ` form-check form-switch text=${props.mode}` }>\r\n        \r\n                            <input className=\"form-check-input\" type=\"checkbox\" aria-checked  role=\"switch\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    );\r\n};\r\n\r\nHeader.propTypes = { title: PropTypes.string }\r\n\r\n\r\nHeader.defaultProps = { title: \"My Website\" }\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./TextForm.css\";\r\n\r\nexport default function TextForm(props) {\r\n    \r\n    const [text, setText] = useState(\"\");\r\n\r\n    const clickToUppercase = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    };\r\n\r\n    const Changehandler = (event) => {\r\n        setText(event.target.value);\r\n    };\r\n\r\n    const clickToLowecase = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n    };\r\n\r\n    const clickToclear = () => {\r\n        let newText = \"\";\r\n        setText(newText);\r\n    };\r\n    const clickToSort = () => {\r\n        let str = text.split(\" \");\r\n        let newText = str.sort();\r\n        setText(newText.toString());\r\n    };\r\n    const clickToInvert = () => {\r\n        var invert = \"\";\r\n        for (let i = 1; i < text.length + 1; i++) {\r\n            invert += text[text.length - i];\r\n\r\n            console.log(invert);\r\n        }\r\n\r\n        setText(invert);\r\n    };\r\n\r\n   \r\n\r\n    return (\r\n        <div className={props.theme} >\r\n            <div className=\"container\">\r\n        \r\n                <div className=\"sub-container\"></div>\r\n                <h1>{props.formTitle}</h1>\r\n                <p>{props.info}</p>\r\n                <div className=\"inputBox sub-container\">\r\n                    <textarea\r\n                        value={text}\r\n                        onChange={Changehandler}\r\n                  \r\n                        name=\"\"\r\n                        id=\"\"\r\n                        cols=\"140\"\r\n                        rows=\"10\"\r\n                    ></textarea>\r\n                </div>\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={clickToUppercase}\r\n                    className=\"btn btn-primary my-1 mx-1\"\r\n                >\r\n                    Convert to Uppercase\r\n                </button>\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={clickToLowecase}\r\n                    className=\"btn btn-primary my-1 mx-1\"\r\n                >\r\n                    Convert to Lowercase\r\n                </button>\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={clickToclear}\r\n                    className=\"btn btn-primary my-1 mx-1\"\r\n                >\r\n                    Clear\r\n                </button>\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={clickToSort}\r\n                    className=\"btn btn-primary my-1 mx-1\"\r\n                >\r\n                    Sort Words\r\n                </button>\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={clickToInvert}\r\n                    className=\"btn btn-primary my-1 mx-1\"\r\n                >\r\n                    invert\r\n                </button>\r\n\r\n                <div>\r\n                    <h3>Text Summery</h3>\r\n                    <p>\r\n                        {\" \"}\r\n                        {text.split(\" \").length} Words and {text.length} Sharacters{\" \"}\r\n                        {text.split(\".\").length - 1} Sentense\r\n                    </p>\r\n\r\n                    <h4>{text.split(\" \").length * 0.008} minutes to read </h4>\r\n                    <h4>Preview</h4>\r\n                    <p>{text.length>0 ? text: \"enter text ro preview it here\"}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nTextForm.propTypes = {\r\n    formTitle: PropTypes.string.isRequired,\r\n    info: PropTypes.string.isRequired,\r\n};\r\n","import React, { useState } from 'react'\n\nimport './App.css';\n// import About from './componentsnpm/About';\nimport Header from './components/Header';\nimport TextForm from './components/TextForm';\n\n// import { BrowserRouter, Routes, Route} from \"react-router-dom\"\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\")\n\n\n  const [theme, setTheme] = useState(\"\")\n\n\n  const togglePink = () => {\n    setTheme(\"pink\")\n  }\n  const toggleGreen = () => {\n    setTheme(\"green\")\n  }\n  const toggleYellow = () => {\n    setTheme(\"yellow\")\n  }\n  const toggleWhite = () => {\n    setTheme(\"white\")\n  }\n\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\")\n      document.body.style.backgroundColor = \"gray\";\n      document.body.style.color = \"white\";\n\n    }\n    else {\n      setMode(\"light\")\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n    }\n  }\n\n\n\n\n  return (\n    <>\n      {/* <BrowserRouter> */}\n    \n          <Header title=\"WordProcessor\" about=\"About WP\" search='Search here' mode={mode} toggleWhite={toggleWhite} togglePink={togglePink} toggleYellow={toggleYellow} toggleGreen={toggleGreen} toggleMode={toggleMode} />\n        {/* <Routes> */}\n            {/* <Route path=\"/\" element={  }/> */}\n            <TextForm formTitle=\"Text Form\" info=\"Enter text in below to analyze:\" theme={theme} />\n            {/* <Route path=\"/about\" element={ <About />}/> */}\n        {/* </Routes> */}\n      {/* </BrowserRouter> */}\n\n    </>\n\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n \n    <App />\n \n);\n\n\n"],"sourceRoot":""}